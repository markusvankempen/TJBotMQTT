[
    {
        "id": "4b7c06e1.6ec99",
        "type": "ibmiot out",
        "z": "c8a88cb6.d747b",
        "authentication": "boundService",
        "apiKey": "",
        "outputType": "cmd",
        "deviceId": "tjbot",
        "deviceType": "tjbot",
        "eventCommandType": "turnRight",
        "format": "json",
        "data": "temp:10",
        "qos": "",
        "name": "Send CMD to TJBot",
        "service": "registered",
        "x": 582,
        "y": 95,
        "wires": []
    },
    {
        "id": "4541cea9.b401b8",
        "type": "inject",
        "z": "c8a88cb6.d747b",
        "name": "Send Data",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 122,
        "y": 95,
        "wires": [
            [
                "880d9f0b.dc7cc8"
            ]
        ]
    },
    {
        "id": "880d9f0b.dc7cc8",
        "type": "function",
        "z": "c8a88cb6.d747b",
        "name": "ArmBACK",
        "func": "\n\n// Counter to select from array.\nvar counter1 = context.get('counter1')||0;\ncounter1 = counter1+1;\nif(counter1 > 999) counter1 = 0;\ncontext.set('counter1',counter1);\n\n// Create MQTT message in JSON\nmsg = {\n  payload: \n    {\n      d:{\n          \"action\" : \"armBACK\",  \n          \"motorSpin\": 500, // Range is 500 to 20000\n          \"counter\" : counter1\n\n      }\n    }\n  \n};\nmsg.eventOrCommandType = \"armBACK\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 316,
        "y": 97,
        "wires": [
            [
                "4b7c06e1.6ec99",
                "e08a7b22.4f03b8"
            ]
        ]
    },
    {
        "id": "e08a7b22.4f03b8",
        "type": "debug",
        "z": "c8a88cb6.d747b",
        "name": "totj",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 557.5556030273438,
        "y": 347.2222595214844,
        "wires": []
    },
    {
        "id": "d10d18aa.5a792",
        "type": "comment",
        "z": "c8a88cb6.d747b",
        "name": "Send Comands to TJ",
        "info": "",
        "x": 582,
        "y": 55,
        "wires": []
    },
    {
        "id": "79ebb319.932edc",
        "type": "comment",
        "z": "c8a88cb6.d747b",
        "name": "Control TJ",
        "info": "",
        "x": 90,
        "y": 54,
        "wires": []
    },
    {
        "id": "53bf9b12.a4dd64",
        "type": "function",
        "z": "c8a88cb6.d747b",
        "name": "ArmForward",
        "func": "\n\n// Counter to select from array.\nvar counter1 = context.get('counter1')||0;\ncounter1 = counter1+1;\nif(counter1 > 999) counter1 = 0;\ncontext.set('counter1',counter1);\n\n// Create MQTT message in JSON\nmsg = {\n  payload: \n    {\n      d:{\n          \"action\" : \"armFORWARD\",  \n          \"motorSpin\": 2000, // Range is 500 to 20000\n\n          \"counter\" : counter1\n\n      }\n    }\n  \n};\nmsg.eventOrCommandType = \"armFORWARD\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 306.77777099609375,
        "y": 142.22222900390625,
        "wires": [
            [
                "e08a7b22.4f03b8",
                "4b7c06e1.6ec99"
            ]
        ]
    },
    {
        "id": "a8c6c0c2.b3aad",
        "type": "inject",
        "z": "c8a88cb6.d747b",
        "name": "Send Data",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 113.77777099609375,
        "y": 142.22222900390625,
        "wires": [
            [
                "53bf9b12.a4dd64"
            ]
        ]
    },
    {
        "id": "d71ec88c.98a5f",
        "type": "function",
        "z": "c8a88cb6.d747b",
        "name": "ArmWAVE",
        "func": "\n// Counter to select from array.\nvar counter1 = context.get('counter1')||0;\ncounter1 = counter1+1;\nif(counter1 > 999) counter1 = 0;\ncontext.set('counter1',counter1);\n\n// Create MQTT message in JSON\nmsg = {\n  payload: \n    {\n      d:{\n          \"action\" : \"armWAVE\",  \n          \"counter\" : counter1\n      }\n    }\n  \n};\nmsg.eventOrCommandType = \"armWAVE\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 301,
        "y": 234.33331298828125,
        "wires": [
            [
                "4b7c06e1.6ec99",
                "e08a7b22.4f03b8"
            ]
        ]
    },
    {
        "id": "8a9971c1.a653a",
        "type": "inject",
        "z": "c8a88cb6.d747b",
        "name": "Send Data",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 114,
        "y": 234.33331298828125,
        "wires": [
            [
                "d71ec88c.98a5f"
            ]
        ]
    },
    {
        "id": "89652c52.0d556",
        "type": "function",
        "z": "c8a88cb6.d747b",
        "name": "LEDOn",
        "func": "\n// Counter to select from array.\nvar counter1 = context.get('counter1')||0;\ncounter1 = counter1+1;\nif(counter1 > 999) counter1 = 0;\ncontext.set('counter1',counter1);\n\n// Create MQTT message in JSON\nvar msg = {\n  payload: \n    {\n      d:{\n        \"action\"  : \"ledON\", \n        \"color\"   : 0x000000, //GRB\n        \"counter\" : counter1\n      }\n    }\n  \n};\nmsg.eventOrCommandType = \"ledON\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 289.77777099609375,
        "y": 429.33331298828125,
        "wires": [
            [
                "e08a7b22.4f03b8",
                "4b7c06e1.6ec99"
            ]
        ]
    },
    {
        "id": "5eba5a06.bdc4dc",
        "type": "inject",
        "z": "c8a88cb6.d747b",
        "name": "Send Data",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 108.77777099609375,
        "y": 429.33331298828125,
        "wires": [
            [
                "89652c52.0d556"
            ]
        ]
    },
    {
        "id": "eb61ce85.850d58",
        "type": "function",
        "z": "c8a88cb6.d747b",
        "name": "LEDOff",
        "func": "\n// Counter to select from array.\nvar counter1 = context.get('counter1')||0;\ncounter1 = counter1+1;\nif(counter1 > 999) counter1 = 0;\ncontext.set('counter1',counter1);\n\n// Counter to select from array.\nvar counter1 = context.get('counter1')||0;\ncounter1 = counter1+1;\nif(counter1 > 9) counter1 = 0;\ncontext.set('counter1',counter1);\n\n// Create MQTT message in JSON\nmsg = {\n  payload: \n    {\n      d:{\n        \"action\" : \"ledOff\", \n         \"counter\" : counter1\n      }\n    }\n  \n};\nmsg.eventOrCommandType = \"ledOFF\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 286.22222900390625,
        "y": 471.88885498046875,
        "wires": [
            [
                "e08a7b22.4f03b8",
                "4b7c06e1.6ec99"
            ]
        ]
    },
    {
        "id": "8edb91de.ef92",
        "type": "inject",
        "z": "c8a88cb6.d747b",
        "name": "Send Data",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 105.22222900390625,
        "y": 471.88885498046875,
        "wires": [
            [
                "eb61ce85.850d58"
            ]
        ]
    },
    {
        "id": "61585c44.56bb2c",
        "type": "function",
        "z": "c8a88cb6.d747b",
        "name": "LEDRed",
        "func": "\n// Counter to select from array.\nvar counter1 = context.get('counter1')||0;\ncounter1 = counter1+1;\nif(counter1 > 999) counter1 = 0;\ncontext.set('counter1',counter1);\n\n// Create MQTT message in JSON\nmsg = {\n  payload:\n    {\n      d:{\n        \"action\" : \"ledRED\", \n        \"counter\" : counter1\n      }\n    }\n  \n};\nmsg.eventOrCommandType = \"ledRED\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 281,
        "y": 523,
        "wires": [
            [
                "4b7c06e1.6ec99"
            ]
        ]
    },
    {
        "id": "e20491f9.8bae28",
        "type": "inject",
        "z": "c8a88cb6.d747b",
        "name": "Send Data",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 100,
        "y": 523,
        "wires": [
            [
                "61585c44.56bb2c"
            ]
        ]
    },
    {
        "id": "1ccd0d6f.bd2e33",
        "type": "function",
        "z": "c8a88cb6.d747b",
        "name": "LEDBlue",
        "func": "\nvar counter1 = context.get('counter1')||0;\ncounter1 = counter1+1;\nif(counter1 > 999) counter1 = 0;\ncontext.set('counter1',counter1);\n\n// Create MQTT message in JSON\nvar msg = {\n  payload: \n    {\n      d:{\n        \"action\" : \"ledBLUE\", \n       \"counter\" : counter1\n      }\n    }\n  \n};\nmsg.eventOrCommandType = \"ledBLUE\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 274,
        "y": 561,
        "wires": [
            [
                "4b7c06e1.6ec99"
            ]
        ]
    },
    {
        "id": "3e5dc649.fed88a",
        "type": "inject",
        "z": "c8a88cb6.d747b",
        "name": "Send Data",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 94,
        "y": 560,
        "wires": [
            [
                "1ccd0d6f.bd2e33"
            ]
        ]
    },
    {
        "id": "e7f353bc.b7d568",
        "type": "function",
        "z": "c8a88cb6.d747b",
        "name": "LEDGreen",
        "func": "// Thermostat's location:\nvar longitude1 = -98.49;\nvar latitude1 = 29.42;\n\n// Array of pseudo random temperatures\nvar temp1 = [15,17,18.5,20,21.5,23,24,22.2,19,18];\n\n// Array of pseudo random relative humidities\nvar humidity1 = [50,55,61,68,65,60,53,49,45,47];\n\n// Counter to select from array.\nvar counter1 = context.get('counter1')||0;\ncounter1 = counter1+1;\nif(counter1 > 999) counter1 = 0;\ncontext.set('counter1',counter1);\n\n// Create MQTT message in JSON\nmsg = {\n  payload: \n    {\n      d:{\n        \"action\" : \"ledGREEN\", \n             \"counter\" : counter1\n        // not use old for testing\n  // //   \"increment\": 0,\n       // \"interval\": 250,\n    //    \"stopat\": 1501,\n      //  \"motorSpin\": 1800,\n        //\"turn\" : 500,\n//        \"temp\" : temp1[counter1],\n  //      \"humidity\" : humidity1[counter1],\n    //    \"location\" :\n      //  {\n        //  \"longitude\" : longitude1,\n         // \"latitude\" : latitude1\n    //    },\n      }\n    }\n  \n};\nmsg.eventOrCommandType = \"ledGREEN\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 287,
        "y": 597,
        "wires": [
            [
                "4b7c06e1.6ec99"
            ]
        ]
    },
    {
        "id": "c542cf9b.3b27d8",
        "type": "inject",
        "z": "c8a88cb6.d747b",
        "name": "Send Data",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 89,
        "y": 599,
        "wires": [
            [
                "e7f353bc.b7d568"
            ]
        ]
    },
    {
        "id": "fed4281e.46a2c",
        "type": "function",
        "z": "c8a88cb6.d747b",
        "name": "ArmMove500",
        "func": "\n// Counter to select from array.\nvar counter1 = context.get('counter1')||0;\ncounter1 = counter1+1;\nif(counter1 > 999) counter1 = 0;\ncontext.set('counter1',counter1);\n\n// Create MQTT message in JSON\nvar msg = {\n  payload:  //JSON.stringify(\n    {\n      d:{\n        \"action\" : \"armMove\", \n        \"motorSpin\": 500, // Range is 500 to 2000\n        \"counter\" : counter1\n      }\n    }\n\n};\nmsg.eventOrCommandType = \"armMove\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 297,
        "y": 327,
        "wires": [
            [
                "e08a7b22.4f03b8",
                "4b7c06e1.6ec99"
            ]
        ]
    },
    {
        "id": "69395059.c40f38",
        "type": "inject",
        "z": "c8a88cb6.d747b",
        "name": "Send Data",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 105,
        "y": 326,
        "wires": [
            [
                "fed4281e.46a2c"
            ]
        ]
    },
    {
        "id": "7a97926a.051aac",
        "type": "function",
        "z": "c8a88cb6.d747b",
        "name": "ArmMove2000",
        "func": "\n// Counter to select from array.\nvar counter1 = context.get('counter1')||0;\ncounter1 = counter1+1;\nif(counter1 > 999) counter1 = 0;\ncontext.set('counter1',counter1);\n\n// Create MQTT message in JSON\nvar msg = {\n  payload:  //JSON.stringify(\n    {\n      d:{\n        \"action\" : \"armMove\", \n        \"motorSpin\": 2000, // Range is 500 to 2000\n          \"counter\" : counter1\n      }\n    }\n\n};\nmsg.eventOrCommandType = \"armMove\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 297.2222595214844,
        "y": 362.5555725097656,
        "wires": [
            [
                "4b7c06e1.6ec99"
            ]
        ]
    },
    {
        "id": "e6b2d62a.2b6c",
        "type": "inject",
        "z": "c8a88cb6.d747b",
        "name": "Send Data",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 102.77780151367188,
        "y": 358.1111145019531,
        "wires": [
            [
                "7a97926a.051aac"
            ]
        ]
    },
    {
        "id": "715d2915.22c7f8",
        "type": "function",
        "z": "c8a88cb6.d747b",
        "name": "LEDSetColorYellow",
        "func": "\n// Counter to select from array.\nvar counter1 = context.get('counter1')||0;\ncounter1 = counter1+1;\nif(counter1 > 999) counter1 = 0;\ncontext.set('counter1',counter1);\n\n// Create MQTT message in JSON\nvar msg = {\n  payload:\n    {\n      d:{\n        \"action\" : \"ledSET\", \n        \"color\"  : 0xFFFF00, //GRB //yellow\n        \"value\"  : \"yellow\",\n        \"counter\": counter1\n        }\n      }\n    \n  \n};\nmsg.eventOrCommandType = \"ledSET\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 281.66668701171875,
        "y": 639,
        "wires": [
            [
                "4b7c06e1.6ec99",
                "e08a7b22.4f03b8"
            ]
        ]
    },
    {
        "id": "98b38ad8.8736b8",
        "type": "inject",
        "z": "c8a88cb6.d747b",
        "name": "Send Data",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 86.00003051757812,
        "y": 640,
        "wires": [
            [
                "715d2915.22c7f8"
            ]
        ]
    },
    {
        "id": "b1f1b467.9ce91",
        "type": "function",
        "z": "c8a88cb6.d747b",
        "name": "ArmUP",
        "func": "\n\n// Counter to select from array.\nvar counter1 = context.get('counter1')||0;\ncounter1 = counter1+1;\nif(counter1 > 999) counter1 = 0;\ncontext.set('counter1',counter1);\n\n// Create MQTT message in JSON\nmsg = {\n  payload: \n    {\n      d:{\n          \"action\" : \"armUP\",  \n          \"motorSpin\": 1500, // Range is 500 to 20000\n\n          \"counter\" : counter1\n\n      }\n    }\n  \n};\nmsg.eventOrCommandType = \"armUP\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 288.3333740234375,
        "y": 182.5555419921875,
        "wires": [
            [
                "4b7c06e1.6ec99"
            ]
        ]
    },
    {
        "id": "6ddb4c0d.13b844",
        "type": "inject",
        "z": "c8a88cb6.d747b",
        "name": "Send Data",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 105.3333740234375,
        "y": 182.5555419921875,
        "wires": [
            [
                "b1f1b467.9ce91"
            ]
        ]
    },
    {
        "id": "6fd4859e.aea7ec",
        "type": "ibmiot in",
        "z": "c8a88cb6.d747b",
        "authentication": "boundService",
        "apiKey": "",
        "inputType": "evt",
        "deviceId": "",
        "applicationId": "",
        "deviceType": "+",
        "eventType": "+",
        "commandType": "",
        "format": "json",
        "name": "FromTJ",
        "service": "registered",
        "allDevices": true,
        "allApplications": "",
        "allDeviceTypes": true,
        "allEvents": true,
        "allCommands": "",
        "allFormats": true,
        "qos": 0,
        "x": 800.357177734375,
        "y": 99.53570556640625,
        "wires": [
            [
                "ffdbea4f.5351b",
                "c1cc69ae.dd3b58"
            ]
        ]
    },
    {
        "id": "ffdbea4f.5351b",
        "type": "debug",
        "z": "c8a88cb6.d747b",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 970.357177734375,
        "y": 99.78570556640625,
        "wires": []
    },
    {
        "id": "c1cc69ae.dd3b58",
        "type": "switch",
        "z": "c8a88cb6.d747b",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "dht",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "tjlisten",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 3,
        "x": 805.0794677734375,
        "y": 171.38888549804688,
        "wires": [
            [
                "194f2504.a09f03"
            ],
            [],
            []
        ]
    },
    {
        "id": "194f2504.a09f03",
        "type": "function",
        "z": "c8a88cb6.d747b",
        "name": "LetArmTemStatus",
        "func": "msg.temperature = msg.payload.temperature;\nmsg.humidity = msg.payload.humidity;\nmsg.led =  msg.payload.led;\nmsg.arm =  msg.payload.arm;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 985.3172607421875,
        "y": 158.5476531982422,
        "wires": [
            [
                "ccd8c98b.1cd878"
            ]
        ]
    },
    {
        "id": "ccd8c98b.1cd878",
        "type": "debug",
        "z": "c8a88cb6.d747b",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1194.5716552734375,
        "y": 157.1428680419922,
        "wires": []
    }
]
